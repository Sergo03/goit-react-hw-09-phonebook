{"version":3,"sources":["redux/Auth/auth-selectors.js","redux/Auth/auth-operations.js","redux/Auth/auth-actions.js","Components/Container/Container.js","Components/Navigation.js","Components/UserMenu/UserMenu.js","Components/AuthNav.js","Components/AppBar.js","Components/PrivateRoute.js","Components/PublickRoute.js","App.js","redux/Contacts/reducer.js","redux/Auth/auth-reducer.js","redux/store.js","index.js","redux/Contacts/action.js"],"names":["getIsAuthenticated","state","auth","isAuthenticated","getUserName","user","name","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","response","data","message","login","logout","getCurrentUser","getState","persistedToken","get","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","Container","children","className","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","useSelector","authSelectors","to","exact","style","activeStyle","container","alignItems","marginRight","UserMenu","useDispatch","Button","type","variant","onClick","authOperations","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","Contacts","App","useEffect","fallback","PublickRoute","path","items","createReducer","actions","payload","filter","contact","id","loading","_","error","combineReducers","userState","email","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConf","key","storage","whitelist","store","configureStore","reducer","persistReducer","authreducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","fetchContactRequest","fetchContactSuccsess","fetchContactError","addContactRequest","addContactSuccsess","addContactError","deleteContactRequest","deleteContactSuccsess","deleteContactError","changeFilter"],"mappings":"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","file":"static/js/main.14f2c5c9.chunk.js","sourcesContent":["export const getIsAuthenticated = state => state.auth.isAuthenticated;\nexport const getUserName = state => state.auth.user.name\n","import axios from 'axios'\nimport * as authActions from './auth-actions'\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/'\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n\n\nexport const register = credentials => async dispatch => {\n    dispatch(authActions.registerRequest())\n\n    \n    try {\n        const response = await axios.post('/users/signup', credentials);\n\n        token.set(response.data.token)\n        dispatch(authActions.registerSuccess(response.data))\n    } catch (error) {\n        dispatch(authActions.registerError(error.message))\n    }\n};\n\n\nexport const login= credentials => async dispatch => {\n    dispatch(authActions.loginRequest())\n\n    \n    try {\n        const response = await axios.post('/users/login', credentials);\n        token.set(response.data.token)\n        dispatch(authActions.loginSuccess(response.data))\n    } catch (error) {\n        dispatch(authActions.loginError(error.message))\n    }\n};\n\nexport const logout = () => async dispatch => {\n    dispatch(authActions.logoutRequest())\n\n    \n    try {\n        await axios.post('/users/logout');\n        token.unset();\n        dispatch(authActions.logoutSuccess())\n    } catch (error) {\n        dispatch(authActions.logoutError(error.message))\n    }\n}\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n    const {\n        auth: { token: persistedToken },\n    } = getState();\n\n    if (!persistedToken) {\n        return;\n    }\n\n    token.set(persistedToken);\n    dispatch(authActions.getCurrentUserRequest());\n\n    try {\n        const response = await axios.get('/users/current');\n        dispatch(authActions.getCurrentUserSuccess(response.data))\n    } catch (error) {\n         dispatch(authActions.getCurrentUserError(error.message))\n    }\n\n}","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');","import React from 'react';\n\n\nconst Container = ({ children }) => <div className='container'>{children}</div>;\n\nexport default Container;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport * as  authSelectors from '../redux/Auth/auth-selectors';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = () => {\nconst isAuthenticated=useSelector(authSelectors.getIsAuthenticated)\n  return (\n     <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n\n    {isAuthenticated&&<NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n     Contacts\n    </NavLink>} \n  </nav>\n  )\n}\n \n\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// })\n\nexport default Navigation;","import React from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport * as authSelectors from '../../redux/Auth/auth-selectors'\nimport * as authOperations from '../../redux/Auth/auth-operations'\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = () => {\n  \n  const dispatch = useDispatch();\n  const onLogout =()=> dispatch(authOperations.logout());\n  const name = useSelector(authSelectors.getUserName);\n  \n  return (\n    <div style={styles.container}>\n      <span style={styles.name}>Welcome, {name}</span>\n      <Button type=\"button\" variant=\"dark\" onClick={onLogout}>\n        Logout\n    </Button>\n    </div>\n  )\n}\n\nexport default UserMenu;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Registration\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu/UserMenu';\nimport AuthNav from './AuthNav';\nimport * as authSelectors from '../redux/Auth/auth-selectors'\n\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '2px solid red',\n  },\n};\n\nconst AppBar = () => {\nconst isAuthenticated=useSelector(authSelectors.getIsAuthenticated)\n\n  return (<header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n  )\n};\n \n\n\n// const mapStateToProps = (state) => ({\n//     isAuthenticated:authSelectors.getIsAuthenticated(state)\n// })\n\nexport default AppBar;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport * as  authSelectors from '../redux/Auth/auth-selectors';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\n\nconst PrivateRoute = ({\n  children,\n  redirectTo,\n  ...routeProps\n}) => {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated)\n  return (\n    <Route {...routeProps}>\n      {isAuthenticated ? children : <Redirect to={redirectTo} />}\n    </Route>\n  )\n};\n\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport * as  authSelectors from '../redux/Auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  // component: Component,\n  children,\n  redirectTo,\n  ...routeProps\n}) => {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>)\n};\n\n\n// const mapStateToProps = state => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n  export default PublicRoute;\n\n","import React, { Suspense,lazy, useEffect } from 'react';\nimport { Switch } from 'react-router-dom';\nimport Container from './Components/Container/Container'\nimport AppBar from './Components/AppBar'\nimport * as authOperations from './redux/Auth/auth-operations'\nimport {  useDispatch } from 'react-redux';\nimport PrivateRoute from './Components/PrivateRoute'\nimport PublickRoute from './Components/PublickRoute'\n\nconst HomeView = lazy(() => import('./Components/View/Home'))\nconst RegisterView = lazy(() => import('./Components/View/RegisterView'))\nconst LoginView = lazy(() => import('./Components/View/LoginView'))\nconst Contacts = lazy(() => import('./Components/View/Contacts'))\n\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser())\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<p>loading...</p>}>\n        <Switch>\n          <PublickRoute exact path=\"/\"><HomeView /></PublickRoute>\n          <PublickRoute path=\"/register\" restricted redirectTo=\"/contacts\" ><RegisterView /></PublickRoute>\n          <PublickRoute path=\"/login\" restricted redirectTo=\"/contacts\" ><LoginView /></PublickRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\" ><Contacts /></PrivateRoute>\n        </Switch>\n      </Suspense>\n    </Container>\n  )\n}\n \nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport * as actions from './action'\n\nconst items = createReducer([], {\n    [actions.fetchContactSuccsess]:(state,{payload})=>payload,\n    [actions.addContactSuccsess]: (state, {payload}) => [...state, payload],\n    [actions.deleteContactSuccsess]:(state, {payload})=>state.filter(contact => contact.id !== payload),\n})\n\nconst loading = createReducer(false, {\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccsess]: () => false,\n  [actions.fetchContactError]: () => false,\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccsess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccsess]: () => false,\n  [actions.deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n    [actions.changeFilter]:(_,{payload})=>payload,\n})\n\nconst error = createReducer(null, {\n    [actions.fetchContactError]: (_,{payload})=>payload,\n    [actions.addContactError]:(_,{payload})=>payload,\n    [actions.deleteContactError]:(_,{payload})=>payload\n})\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n    error\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { combineReducers } from 'redux';\n// import types from './types';\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });","import { combineReducers } from 'redux'\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as authActions from './auth-actions';\n\nconst userState = { name: null, email: null };\n\n const user = createReducer(userState, {\n     [authActions.registerSuccess]: (_, { payload }) => payload.user,\n     [authActions.loginSuccess]: (_, { payload }) => payload.user,\n     [authActions.logoutSuccess]: () => userState,\n     [authActions.getCurrentUserSuccess]:(_,{payload})=>payload\n});\n\n const token = createReducer(null, {\n     [authActions.registerSuccess]: (_, { payload }) => payload.token,\n     [authActions.loginSuccess]: (_, { payload }) => payload.token,\n     [authActions.logoutSuccess]:()=>null\n})\n\nconst error = createReducer(null, {\n    [authActions.registerError]: (_, { payload }) => payload,\n    [authActions.loginError]: (_, { payload }) => payload,\n    [authActions.logoutError]: (_, { payload }) => payload,\n    [authActions.getCurrentUserError]:(_,{payload})=>payload\n })\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]: () => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]:()=>false\n})\n\n\nexport default combineReducers({user,isAuthenticated, token,error})","import contactsReducer from './Contacts/reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport authreducer from './Auth/auth-reducer'\nimport storage from 'redux-persist/lib/storage'\n\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n})]\n\nconst authPersistConf = {\n  key: 'auth',\n  storage,\n  whitelist:['token']\n}\n\n export const store = configureStore({\n  reducer: {\n    auth:persistReducer(authPersistConf,authreducer) ,\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n})\n\n export const  persistor = persistStore(store)\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport  './styles.css'\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccsess = createAction('contacts/fetchCotactSuccsess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccsess = createAction('contacts/addCotactSuccsess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccsess = createAction('contacts/deleteCotactSuccsess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n\n\n\n export const  changeFilter=createAction('contacts/changeFilter')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}