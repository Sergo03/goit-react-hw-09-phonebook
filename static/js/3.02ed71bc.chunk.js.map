{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Form/Style.module.css","Components/Render/Style.module.css","redux/Contacts/contacts-selectors.js","Components/Form/Form.js","redux/Contacts/operations.js","Components/Filter/Filter.js","Components/Render/RenderContactList.js","Components/View/Contacts.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getIsLoadingContacts","state","contacts","loading","getFilter","filter","getError","error","getItems","items","getVisibalContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","Form","useState","setName","number","setNumber","useSelector","selectors","dispatch","useDispatch","onSubmit","data","action","axios","post","then","catch","message","operations","handleinput","e","target","console","log","preventDefault","isIncludeName","find","alert","className","style","label_name","input_name","type","pattern","title","required","onChange","label_number","Button","variant","input_btn","Filter","actions","currentTarget","Render","onDeleteContact","id","delete","list_render","map","contact_item","btn_del","onClick","Contacts","isLoadingContacts","useEffect","get"],"mappings":"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","file":"static/js/3.02ed71bc.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_number\":\"Style_label_number__3PDuB\",\"input_btn\":\"Style_input_btn__25QTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_render\":\"Style_list_render__2joji\",\"contact_item\":\"Style_contact_item__3mwaA\"};","import { createSelector} from '@reduxjs/toolkit';\n\nexport const getIsLoadingContacts = state => state.contacts.loading;\nexport const getFilter =state=>state.contacts.filter\nexport const getError = state => state.contacts.error\nexport const getItems = state => state.contacts.items;\n\n\nexport const getVisibalContacts = createSelector(\n    [getItems, getFilter],\n    (items, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n        return items.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter))\n    }\n)","import React, { useState } from 'react';\n// import PropsTypes from 'prop-types';\nimport {useDispatch,useSelector} from 'react-redux'\nimport * as operations from '../../redux/Contacts/operations'\nimport * as selectors from '../../redux/Contacts/contacts-selectors'\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport style from './Style.module.css'\n\n\nconst Form = () => {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('');\n\n  const value = useSelector(selectors.getItems);\n\n  const dispatch = useDispatch();\n  const onSubmit=(data)=>dispatch(operations.addContact(data))\n\n  const handleinput = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.log(`Поле ${name} не обрабатываются `);\n    };\n  };\n   const handleSubmit = (e) => {\n    e.preventDefault();\n    const isIncludeName = !!value.find(contact => contact.name === name)\n    isIncludeName && alert(`${name} is already in contacts`)\n    !isIncludeName && onSubmit({ name, number })\n \n     setName('');\n     setNumber('');\n\n  }\n\n\n  return ( \n      <form onSubmit={handleSubmit} className='from_contact'>\n        \n        <label className={style.label_name}> Name\n          <input\n            className={style.input_name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleinput}\n            value={name}\n          />\n        </label> \n        <label className={style.label_number}>Number\n          <input\n            className='input_tel'\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleinput}\n            value={number}\n          />\n        </label>\n         \n        <Button type=\"submit\" variant=\"success\" className={style.input_btn}>Add contact</Button>\n      </form> );\n}\n \nexport default Form;\n","import axios from 'axios'\nimport * as action from './action'\n\n\n\nexport const fetchContact = () => dispatch => {\n    dispatch(action.fetchContactRequest());\n    axios.get('/contacts').then(({ data }) => dispatch(action.fetchContactSuccsess(data)))\n        .catch(error => dispatch(action.fetchContactError(error.message)));\n};\n\nexport const addContact = ({ name, number }) => dispatch => {\n    const contact = {\n        name,\n        number\n    };\n    dispatch(action.addContactRequest());\n    axios.post('/contacts', contact).then(({ data }) => dispatch(action.addContactSuccsess(data)),\n    ).catch(error => dispatch(action.addContactError(error.message)));\n};\n\nexport const deleteContact = id => dispatch => {\n    dispatch(action.deleteContactRequest())\n    \n    axios.delete(`/contacts/${id}`).then(() => dispatch(action.deleteContactSuccsess(id)))\n        .catch(error => dispatch(action.deleteContactError(error.message)));\n};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as actions from '../../redux/Contacts/action'\nimport * as selectors from '../../redux/Contacts/contacts-selectors'\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectors.getFilter);\n  const onChange=e=>dispatch(actions.changeFilter(e.currentTarget.value));\n\n  return (\n    <label className='label}'> Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} className='input' />\n    </label>\n            \n  )\n}\n\nexport default Filter;","import React from 'react';\nimport { useDispatch,useSelector } from 'react-redux'\nimport * as operations from '../../redux/Contacts/operations'\nimport style from './Style.module.css'\nimport * as selectors from '../../redux/Contacts/contacts-selectors'\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Render = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectors.getVisibalContacts);\n  const onDeleteContact=(id)=>dispatch(operations.deleteContact(id))\n\n    return (\n         <ul className={style.list_render}>\n        {value.map((contact) => {\n            return <li className={style.contact_item} key={contact.id}>{contact.name}: {contact.number} <Button type='button' className={style.btn_del} onClick={()=>onDeleteContact(contact.id) }variant=\"danger\">delete</Button></li>\n          })}\n        </ul>\n    )\n}\n\n\nexport default Render;","import React, { useEffect } from 'react';\nimport Form from '../Form/Form';\nimport Filter from '../Filter/Filter';\nimport Render from '../Render/RenderContactList';\nimport { useDispatch,useSelector } from 'react-redux'\nimport * as operations from '../../redux/Contacts/operations'\nimport * as selectors from '../../redux/Contacts/contacts-selectors';\n\n\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoadingContacts = useSelector(selectors.getIsLoadingContacts);\n    const error = useSelector(selectors.getError) \n\n\n    useEffect(() => {\n        dispatch(operations.fetchContact())\n    },[dispatch])\n\n\n    return ( \n            <div className='contact'>\n                {error && <h1>{error}</h1>}\n                {isLoadingContacts && <h1>Loading...</h1>}\n                <h1 className='contact_text'>Phonebook</h1>\n                <Form />\n                <h2 className='contact_text'>Contacts</h2>\n                <Filter />\n                <Render />\n            </div> );\n}\n \nexport default Contacts;\n"],"sourceRoot":""}